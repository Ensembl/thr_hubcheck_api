image: ubuntu

variables:
  WORK_DIR: "~/workspace/thr_hubcheck_api"

stages:
  - deploy

before_script:
  # Install ssh-agent if not already installed
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)
  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  # We're using tr to fix line endings which makes ed25519 keys work
  # without extra base64 encoding.
  # https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  # Create the SSH directory and give it the right permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - touch ~/.ssh/id_rsa ~/.ssh/known_hosts
  # Use ssh-keyscan to scan the keys of your private server. Replace gitlab.com
  # with your own domain name. You can copy and repeat that command if you have
  # more than one server to connect to.
  - ssh-keyscan ${LOGIN_NODE} >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

deploy-prod:
  stage: deploy
  script: >
    ssh $SSH_OWNER_USERNAME@$LOGIN_NODE "
      cd ${WORK_DIR}
      git checkout main
      git pull
      ssh $PROD_VM
        cd ${WORK_DIR}
        source venv/bin/activate
        pip install -r requirements.txt
        echo 'Restarting the server...'
        ps ax | grep gunicorn
        pkill gunicorn
        gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --daemon
    "


# Resources:
# https://embl-ebi-developers.slack.com/archives/CB441ME9X/p1662547944258899
# https://docs.gitlab.com/ee/ci/ssh_keys/
# https://medium.com/devops-community/how-to-configure-gitlab-ci-to-auto-deploy-your-app-via-ssh-84426bf7b749
# https://gitlab.com/johandurancerdas/gitlab-cicd-tutorial/-/blob/master/.gitlab-ci.yml